/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type { Addressable } from "ethers";
import { Contract, ContractFactory, ContractTransactionResponse, Interface } from "ethers"
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers"
import type { NonPayableOverrides } from "../common.js"
  import type { Voting, VotingInterface } from "../Voting.js";

  const _abi = [
  {
    "inputs": [
      {
        "internalType": "string[]",
        "name": "proposalNames",
        "type": "string[]"
      }
    ],
    "stateMutability": "nonpayable",
    "type": "constructor"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": false,
        "internalType": "enum Voting.Phase",
        "name": "newPhase",
        "type": "uint8"
      }
    ],
    "name": "PhaseChanged",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "index",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "string",
        "name": "name",
        "type": "string"
      }
    ],
    "name": "ProposalAdded",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": false,
        "internalType": "address",
        "name": "voterAddress",
        "type": "address"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "proposalId",
        "type": "uint256"
      }
    ],
    "name": "Voted",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": false,
        "internalType": "address",
        "name": "voterAddress",
        "type": "address"
      }
    ],
    "name": "VoterAdded",
    "type": "event"
  },
  {
    "inputs": [
      {
        "internalType": "string",
        "name": "proposalName",
        "type": "string"
      }
    ],
    "name": "addProposals",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "voter",
        "type": "address"
      }
    ],
    "name": "addVoters",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "getAllProposals",
    "outputs": [
      {
        "components": [
          {
            "internalType": "string",
            "name": "title",
            "type": "string"
          },
          {
            "internalType": "uint256",
            "name": "voteCount",
            "type": "uint256"
          }
        ],
        "internalType": "struct Voting.Proposal[]",
        "name": "",
        "type": "tuple[]"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "getPhase",
    "outputs": [
      {
        "internalType": "string",
        "name": "",
        "type": "string"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "index",
        "type": "uint256"
      }
    ],
    "name": "getProposal",
    "outputs": [
      {
        "internalType": "string",
        "name": "title",
        "type": "string"
      },
      {
        "internalType": "uint256",
        "name": "voteCount",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "nextPhase",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "owner",
    "outputs": [
      {
        "internalType": "address",
        "name": "",
        "type": "address"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "phase",
    "outputs": [
      {
        "internalType": "enum Voting.Phase",
        "name": "",
        "type": "uint8"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "pickWinner",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "winnerIndex",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "name": "proposalMembers",
    "outputs": [
      {
        "internalType": "string",
        "name": "title",
        "type": "string"
      },
      {
        "internalType": "uint256",
        "name": "voteCount",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "showProposals",
    "outputs": [
      {
        "components": [
          {
            "internalType": "string",
            "name": "title",
            "type": "string"
          },
          {
            "internalType": "uint256",
            "name": "voteCount",
            "type": "uint256"
          }
        ],
        "internalType": "struct Voting.Proposal[]",
        "name": "",
        "type": "tuple[]"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "totalVoters",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "index",
        "type": "uint256"
      }
    ],
    "name": "vote",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "",
        "type": "address"
      }
    ],
    "name": "voterMembers",
    "outputs": [
      {
        "internalType": "bool",
        "name": "voted",
        "type": "bool"
      },
      {
        "internalType": "uint256",
        "name": "vote",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "winnerName",
    "outputs": [
      {
        "internalType": "string",
        "name": "",
        "type": "string"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  }
] as const;

  const _bytecode = "0x608060405234801562000010575f80fd5b5060405162002a5138038062002a5183398181016040528101906200003691906200041d565b335f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160045f6101000a81548160ff021916908360038111156200009d576200009c6200046c565b5b02179055505f5b8151811015620001985760016040518060400160405280848481518110620000d157620000d062000499565b5b602002602001015181526020015f815250908060018154018082558091505060019003905f5260205f2090600202015f909190919091505f820151815f0190816200011d9190620006fd565b506020820151816001015550507ff970aa486598017b8116c2beb18c50d4584ecbc3c688817f59b26796725f31bf8183838151811062000162576200016162000499565b5b60200260200101516040516200017a92919062000842565b60405180910390a180806200018f90620008a1565b915050620000a4565b5050620008ed565b5f604051905090565b5f80fd5b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b620001fd82620001b5565b810181811067ffffffffffffffff821117156200021f576200021e620001c5565b5b80604052505050565b5f62000233620001a0565b9050620002418282620001f2565b919050565b5f67ffffffffffffffff821115620002635762000262620001c5565b5b602082029050602081019050919050565b5f80fd5b5f80fd5b5f67ffffffffffffffff821115620002995762000298620001c5565b5b620002a482620001b5565b9050602081019050919050565b5f5b83811015620002d0578082015181840152602081019050620002b3565b5f8484015250505050565b5f620002f1620002eb846200027c565b62000228565b90508281526020810184848401111562000310576200030f62000278565b5b6200031d848285620002b1565b509392505050565b5f82601f8301126200033c576200033b620001b1565b5b81516200034e848260208601620002db565b91505092915050565b5f6200036d620003678462000246565b62000228565b9050808382526020820190506020840283018581111562000393576200039262000274565b5b835b81811015620003e157805167ffffffffffffffff811115620003bc57620003bb620001b1565b5b808601620003cb898262000325565b8552602085019450505060208101905062000395565b5050509392505050565b5f82601f830112620004025762000401620001b1565b5b81516200041484826020860162000357565b91505092915050565b5f60208284031215620004355762000434620001a9565b5b5f82015167ffffffffffffffff811115620004555762000454620001ad565b5b6200046384828501620003eb565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806200051557607f821691505b6020821081036200052b576200052a620004d0565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026200058f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000552565b6200059b868362000552565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f620005e5620005df620005d984620005b3565b620005bc565b620005b3565b9050919050565b5f819050919050565b6200060083620005c5565b620006186200060f82620005ec565b8484546200055e565b825550505050565b5f90565b6200062e62000620565b6200063b818484620005f5565b505050565b5b818110156200066257620006565f8262000624565b60018101905062000641565b5050565b601f821115620006b1576200067b8162000531565b620006868462000543565b8101602085101562000696578190505b620006ae620006a58562000543565b83018262000640565b50505b505050565b5f82821c905092915050565b5f620006d35f1984600802620006b6565b1980831691505092915050565b5f620006ed8383620006c2565b9150826002028217905092915050565b6200070882620004c6565b67ffffffffffffffff811115620007245762000723620001c5565b5b620007308254620004fd565b6200073d82828562000666565b5f60209050601f83116001811462000773575f84156200075e578287015190505b6200076a8582620006e0565b865550620007d9565b601f198416620007838662000531565b5f5b82811015620007ac5784890151825560018201915060208501945060208101905062000785565b86831015620007cc5784890151620007c8601f891682620006c2565b8355505b6001600288020188555050505b505050505050565b620007ec81620005b3565b82525050565b5f82825260208201905092915050565b5f6200080e82620004c6565b6200081a8185620007f2565b93506200082c818560208601620002b1565b6200083781620001b5565b840191505092915050565b5f604082019050620008575f830185620007e1565b81810360208301526200086b818462000802565b90509392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f620008ad82620005b3565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203620008e257620008e162000874565b5b600182019050919050565b61215680620008fb5f395ff3fe608060405234801561000f575f80fd5b50600436106100f3575f3560e01c80638da5cb5b11610095578063c7f758a811610064578063c7f758a81461024d578063cceb68f51461027e578063e2ba53f01461029c578063eced0280146102ba576100f3565b80638da5cb5b146101d757806393b08bf5146101f55780639e86620614610213578063b1c9fe6e1461022f576100f3565b80634c105d1b116100d15780634c105d1b1461014e5780634e0abf191461016a5780635d495aea1461019b5780635f5300ff146101b9576100f3565b80630121b93f146100f757806319f7588d146101135780633eadb6db14610144575b5f80fd5b610111600480360381019061010c9190611328565b6102d8565b005b61012d600480360381019061012891906113ad565b6104be565b60405161013b929190611401565b60405180910390f35b61014c6104ea565b005b610168600480360381019061016391906113ad565b6106cc565b005b610184600480360381019061017f9190611328565b61099c565b6040516101929291906114b2565b60405180910390f35b6101a3610a51565b6040516101b091906114e0565b60405180910390f35b6101c1610b48565b6040516101ce91906114e0565b60405180910390f35b6101df610b4e565b6040516101ec9190611508565b60405180910390f35b6101fd610b71565b60405161020a919061166d565b60405180910390f35b61022d600480360381019061022891906117b9565b610c66565b005b610237610e11565b6040516102449190611873565b60405180910390f35b61026760048036038101906102629190611328565b610e23565b6040516102759291906114b2565b60405180910390f35b610286610f2c565b604051610293919061166d565b60405180910390f35b6102a4611021565b6040516102b1919061188c565b60405180910390f35b6102c2611142565b6040516102cf919061188c565b60405180910390f35b600260038111156102ec576102eb611800565b5b60045f9054906101000a900460ff16600381111561030d5761030c611800565b5b1461034d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610344906118f6565b60405180910390fd5b6001805490508110610394576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161038b9061195e565b60405180910390fd5b5f60025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f209050805f015f9054906101000a900460ff1615610424576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161041b906119c6565b60405180910390fd5b6001815f015f6101000a81548160ff021916908315150217905550818160010181905550600180838154811061045d5761045c6119e4565b5b905f5260205f2090600202016001015f82825461047a9190611a3e565b925050819055507f4d99b957a2bc29a30ebd96a7be8e68fe50a3c701db28a91436490b7d53870ca433836040516104b2929190611a71565b60405180910390a15050565b6002602052805f5260405f205f91509050805f015f9054906101000a900460ff16908060010154905082565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610577576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056e90611ae2565b60405180910390fd5b6001600381111561058b5761058a611800565b5b60045f9054906101000a900460ff1660038111156105ac576105ab611800565b5b036105e057600260045f6101000a81548160ff021916908360038111156105d6576105d5611800565b5b0217905550610685565b600260038111156105f4576105f3611800565b5b60045f9054906101000a900460ff16600381111561061557610614611800565b5b0361064957600360045f6101000a81548160ff0219169083600381111561063f5761063e611800565b5b0217905550610684565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067b90611b4a565b60405180910390fd5b5b7fa6dcc92f45df25789d5639b7a0c97ba1edf3bb1c0b5dd3376fd96a0db87c464260045f9054906101000a900460ff166040516106c29190611873565b60405180910390a1565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610759576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161075090611ae2565b60405180910390fd5b6001600381111561076d5761076c611800565b5b60045f9054906101000a900460ff16600381111561078e5761078d611800565b5b146107ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107c590611bb2565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361083c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083390611c1a565b60405180910390fd5b5f60025f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f209050805f015f9054906101000a900460ff16156108cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108c390611c82565b60405180910390fd5b60405180604001604052805f151581526020015f81525060025f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f820151815f015f6101000a81548160ff0219169083151502179055506020820151816001015590505060035f81548092919061095c90611ca0565b91905055507fa636f4a11e2d3ba7f89d042ecb0a6b886716e98cd49d8fd876ee0f73bced42b8826040516109909190611508565b60405180910390a15050565b600181815481106109ab575f80fd5b905f5260205f2090600202015f91509050805f0180546109ca90611d14565b80601f01602080910402602001604051908101604052809291908181526020018280546109f690611d14565b8015610a415780601f10610a1857610100808354040283529160200191610a41565b820191905f5260205f20905b815481529060010190602001808311610a2457829003601f168201915b5050505050908060010154905082565b5f600380811115610a6557610a64611800565b5b60045f9054906101000a900460ff166003811115610a8657610a85611800565b5b14610ac6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610abd90611d8e565b60405180910390fd5b5f805f5b600180549050811015610b3f578260018281548110610aec57610aeb6119e4565b5b905f5260205f209060020201600101541115610b2c5760018181548110610b1657610b156119e4565b5b905f5260205f2090600202016001015492508091505b8080610b3790611ca0565b915050610aca565b50809250505090565b60035481565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60606001805480602002602001604051908101604052809291908181526020015f905b82821015610c5d578382905f5260205f2090600202016040518060400160405290815f82018054610bc490611d14565b80601f0160208091040260200160405190810160405280929190818152602001828054610bf090611d14565b8015610c3b5780601f10610c1257610100808354040283529160200191610c3b565b820191905f5260205f20905b815481529060010190602001808311610c1e57829003601f168201915b5050505050815260200160018201548152505081526020019060010190610b94565b50505050905090565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610cf3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cea90611ae2565b60405180910390fd5b60016003811115610d0757610d06611800565b5b60045f9054906101000a900460ff166003811115610d2857610d27611800565b5b14610d68576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d5f90611df6565b60405180910390fd5b600160405180604001604052808381526020015f815250908060018154018082558091505060019003905f5260205f2090600202015f909190919091505f820151815f019081610db89190611fb1565b506020820151816001015550507ff970aa486598017b8116c2beb18c50d4584ecbc3c688817f59b26796725f31bf60018080549050610df79190612080565b82604051610e069291906120b3565b60405180910390a150565b60045f9054906101000a900460ff1681565b60605f6001805490508310610e6d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e649061195e565b60405180910390fd5b5f60018481548110610e8257610e816119e4565b5b905f5260205f2090600202019050805f018160010154818054610ea490611d14565b80601f0160208091040260200160405190810160405280929190818152602001828054610ed090611d14565b8015610f1b5780601f10610ef257610100808354040283529160200191610f1b565b820191905f5260205f20905b815481529060010190602001808311610efe57829003601f168201915b505050505091509250925050915091565b60606001805480602002602001604051908101604052809291908181526020015f905b82821015611018578382905f5260205f2090600202016040518060400160405290815f82018054610f7f90611d14565b80601f0160208091040260200160405190810160405280929190818152602001828054610fab90611d14565b8015610ff65780601f10610fcd57610100808354040283529160200191610ff6565b820191905f5260205f20905b815481529060010190602001808311610fd957829003601f168201915b5050505050815260200160018201548152505081526020019060010190610f4f565b50505050905090565b60605f3073ffffffffffffffffffffffffffffffffffffffff16635d495aea6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561106d573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061109191906120f5565b9050600181815481106110a7576110a66119e4565b5b905f5260205f2090600202015f0180546110c090611d14565b80601f01602080910402602001604051908101604052809291908181526020018280546110ec90611d14565b80156111375780601f1061110e57610100808354040283529160200191611137565b820191905f5260205f20905b81548152906001019060200180831161111a57829003601f168201915b505050505091505090565b60605f600381111561115757611156611800565b5b60045f9054906101000a900460ff16600381111561117857611177611800565b5b036111ba576040518060400160405280600b81526020017f4e6f74205374617274656400000000000000000000000000000000000000000081525090506112e1565b600160038111156111ce576111cd611800565b5b60045f9054906101000a900460ff1660038111156111ef576111ee611800565b5b03611231576040518060400160405280600c81526020017f526567697374726174696f6e000000000000000000000000000000000000000081525090506112e1565b6002600381111561124557611244611800565b5b60045f9054906101000a900460ff16600381111561126657611265611800565b5b036112a8576040518060400160405280600681526020017f566f74696e67000000000000000000000000000000000000000000000000000081525090506112e1565b6040518060400160405280600581526020017f456e64656400000000000000000000000000000000000000000000000000000081525090505b90565b5f604051905090565b5f80fd5b5f80fd5b5f819050919050565b611307816112f5565b8114611311575f80fd5b50565b5f81359050611322816112fe565b92915050565b5f6020828403121561133d5761133c6112ed565b5b5f61134a84828501611314565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61137c82611353565b9050919050565b61138c81611372565b8114611396575f80fd5b50565b5f813590506113a781611383565b92915050565b5f602082840312156113c2576113c16112ed565b5b5f6113cf84828501611399565b91505092915050565b5f8115159050919050565b6113ec816113d8565b82525050565b6113fb816112f5565b82525050565b5f6040820190506114145f8301856113e3565b61142160208301846113f2565b9392505050565b5f81519050919050565b5f82825260208201905092915050565b5f5b8381101561145f578082015181840152602081019050611444565b5f8484015250505050565b5f601f19601f8301169050919050565b5f61148482611428565b61148e8185611432565b935061149e818560208601611442565b6114a78161146a565b840191505092915050565b5f6040820190508181035f8301526114ca818561147a565b90506114d960208301846113f2565b9392505050565b5f6020820190506114f35f8301846113f2565b92915050565b61150281611372565b82525050565b5f60208201905061151b5f8301846114f9565b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b5f82825260208201905092915050565b5f61156482611428565b61156e818561154a565b935061157e818560208601611442565b6115878161146a565b840191505092915050565b61159b816112f5565b82525050565b5f604083015f8301518482035f8601526115bb828261155a565b91505060208301516115d06020860182611592565b508091505092915050565b5f6115e683836115a1565b905092915050565b5f602082019050919050565b5f61160482611521565b61160e818561152b565b9350836020820285016116208561153b565b805f5b8581101561165b578484038952815161163c85826115db565b9450611647836115ee565b925060208a01995050600181019050611623565b50829750879550505050505092915050565b5f6020820190508181035f83015261168581846115fa565b905092915050565b5f80fd5b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6116cb8261146a565b810181811067ffffffffffffffff821117156116ea576116e9611695565b5b80604052505050565b5f6116fc6112e4565b905061170882826116c2565b919050565b5f67ffffffffffffffff82111561172757611726611695565b5b6117308261146a565b9050602081019050919050565b828183375f83830152505050565b5f61175d6117588461170d565b6116f3565b90508281526020810184848401111561177957611778611691565b5b61178484828561173d565b509392505050565b5f82601f8301126117a05761179f61168d565b5b81356117b084826020860161174b565b91505092915050565b5f602082840312156117ce576117cd6112ed565b5b5f82013567ffffffffffffffff8111156117eb576117ea6112f1565b5b6117f78482850161178c565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b6004811061183e5761183d611800565b5b50565b5f81905061184e8261182d565b919050565b5f61185d82611841565b9050919050565b61186d81611853565b82525050565b5f6020820190506118865f830184611864565b92915050565b5f6020820190508181035f8301526118a4818461147a565b905092915050565b7f4e6f7420696e20766f74696e67207068617365000000000000000000000000005f82015250565b5f6118e0601383611432565b91506118eb826118ac565b602082019050919050565b5f6020820190508181035f83015261190d816118d4565b9050919050565b7f496e76616c69642070726f706f73616c20696e646578000000000000000000005f82015250565b5f611948601683611432565b915061195382611914565b602082019050919050565b5f6020820190508181035f8301526119758161193c565b9050919050565b7f416c726561647920766f746564000000000000000000000000000000000000005f82015250565b5f6119b0600d83611432565b91506119bb8261197c565b602082019050919050565b5f6020820190508181035f8301526119dd816119a4565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611a48826112f5565b9150611a53836112f5565b9250828201905080821115611a6b57611a6a611a11565b5b92915050565b5f604082019050611a845f8301856114f9565b611a9160208301846113f2565b9392505050565b7f4f6e6c79206f776e65722063616e2063616c6c000000000000000000000000005f82015250565b5f611acc601383611432565b9150611ad782611a98565b602082019050919050565b5f6020820190508181035f830152611af981611ac0565b9050919050565b7f566f74696e6720616c726561647920656e6465640000000000000000000000005f82015250565b5f611b34601483611432565b9150611b3f82611b00565b602082019050919050565b5f6020820190508181035f830152611b6181611b28565b9050919050565b7f4e6f7420726567697374726174696f6e207068617365000000000000000000005f82015250565b5f611b9c601683611432565b9150611ba782611b68565b602082019050919050565b5f6020820190508181035f830152611bc981611b90565b9050919050565b7f496e76616c6964206164647265737300000000000000000000000000000000005f82015250565b5f611c04600f83611432565b9150611c0f82611bd0565b602082019050919050565b5f6020820190508181035f830152611c3181611bf8565b9050919050565b7f416c7265616479207265676973746572656400000000000000000000000000005f82015250565b5f611c6c601283611432565b9150611c7782611c38565b602082019050919050565b5f6020820190508181035f830152611c9981611c60565b9050919050565b5f611caa826112f5565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611cdc57611cdb611a11565b5b600182019050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680611d2b57607f821691505b602082108103611d3e57611d3d611ce7565b5b50919050565b7f566f74696e67206e6f7420656e646564207965740000000000000000000000005f82015250565b5f611d78601483611432565b9150611d8382611d44565b602082019050919050565b5f6020820190508181035f830152611da581611d6c565b9050919050565b7f4e6f7420696e20726567697374726174696f6e207068617365000000000000005f82015250565b5f611de0601983611432565b9150611deb82611dac565b602082019050919050565b5f6020820190508181035f830152611e0d81611dd4565b9050919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302611e707fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611e35565b611e7a8683611e35565b95508019841693508086168417925050509392505050565b5f819050919050565b5f611eb5611eb0611eab846112f5565b611e92565b6112f5565b9050919050565b5f819050919050565b611ece83611e9b565b611ee2611eda82611ebc565b848454611e41565b825550505050565b5f90565b611ef6611eea565b611f01818484611ec5565b505050565b5b81811015611f2457611f195f82611eee565b600181019050611f07565b5050565b601f821115611f6957611f3a81611e14565b611f4384611e26565b81016020851015611f52578190505b611f66611f5e85611e26565b830182611f06565b50505b505050565b5f82821c905092915050565b5f611f895f1984600802611f6e565b1980831691505092915050565b5f611fa18383611f7a565b9150826002028217905092915050565b611fba82611428565b67ffffffffffffffff811115611fd357611fd2611695565b5b611fdd8254611d14565b611fe8828285611f28565b5f60209050601f831160018114612019575f8415612007578287015190505b6120118582611f96565b865550612078565b601f19841661202786611e14565b5f5b8281101561204e57848901518255600182019150602085019450602081019050612029565b8683101561206b5784890151612067601f891682611f7a565b8355505b6001600288020188555050505b505050505050565b5f61208a826112f5565b9150612095836112f5565b92508282039050818111156120ad576120ac611a11565b5b92915050565b5f6040820190506120c65f8301856113f2565b81810360208301526120d8818461147a565b90509392505050565b5f815190506120ef816112fe565b92915050565b5f6020828403121561210a576121096112ed565b5b5f612117848285016120e1565b9150509291505056fea26469706673582212209af5453886e44d11497d4dc46bc29b418404055d1b6e134c5295c782f7b7311464736f6c63430008140033";

  
      type VotingConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

      const isSuperArgs = (xs: VotingConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
        xs.length > 1
    

  export class Voting__factory extends ContractFactory {
    
      constructor(...args: VotingConstructorParams) {
        if (isSuperArgs(args)) {
          super(...args);
        } else {
          super(_abi, _bytecode, args[0]);
        }
        
      }
    
    override getDeployTransaction(proposalNames: string[], overrides?: NonPayableOverrides & { from?: string }): Promise<ContractDeployTransaction> {
      return super.getDeployTransaction(proposalNames, overrides || {});
    };
    override deploy(proposalNames: string[], overrides?: NonPayableOverrides & { from?: string }) {
      return super.deploy(proposalNames, overrides || {}) as Promise<Voting & {
        deploymentTransaction(): ContractTransactionResponse;
      }>;
    }
    override connect(runner: ContractRunner | null): Voting__factory {
      return super.connect(runner) as Voting__factory;
    }
    
    
    static readonly bytecode = _bytecode;
    static readonly abi = _abi;
    static createInterface(): VotingInterface {
      return new Interface(_abi) as VotingInterface;
    }
    
    override attach(address: string | Addressable): Voting {
      return super.attach(address) as Voting;
    }
  static connect(address: string, runner?: ContractRunner | null): Voting {
      return new Contract(address, _abi, runner) as unknown as Voting;
    }
  }

  
  